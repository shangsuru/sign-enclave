enclave {
    
    include "user_types.h" /* buffer_t */
    
    from "Edger8rSyntax/Types.edl" import *;
    from "Edger8rSyntax/Pointers.edl" import *;
    from "Edger8rSyntax/Arrays.edl" import *;
    from "Edger8rSyntax/Functions.edl" import *;

    from "TrustedLibrary/Libc.edl" import *;
    from "TrustedLibrary/Libcxx.edl" import ecall_exception, ecall_map;
    from "TrustedLibrary/Thread.edl" import *;

    trusted {
        public int ecdsa_init([in, string] const char* keyfile);

        public int ecdsa_sign([in, string] const char* message, [out, size=sig_len] void* signature, size_t sig_len);

		public int ecdsa_verify([in, string] const char* message, [in, size=sig_len] void* signature, size_t sig_len);

		public int ecdsa_close();

        public sgx_status_t unseal_data([in, size=data_size] const uint8_t *sealed_blob, size_t data_size);

        public uint32_t get_sealed_data_size();

		public sgx_status_t seal_data([out, size=data_size] uint8_t* sealed_blob, uint32_t data_size);
    };

    untrusted {
        void ocall_print_string([in, string] const char* str);
    };

};
